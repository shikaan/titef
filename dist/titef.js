!function(e,t){for(var E in t)e[E]=t[E]}(exports,function(e){var t={};function E(r){if(t[r])return t[r].exports;var s=t[r]={i:r,l:!1,exports:{}};return e[r].call(s.exports,s,s.exports,E),s.l=!0,s.exports}return E.m=e,E.c=t,E.d=function(e,t,r){E.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:r})},E.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return E.d(t,"a",t),t},E.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},E.p="",E(E.s=3)}([function(e,t){const E={PENDING:"PENDING",SUCCESS:"SUCCESS",FAILURE:"FAILURE",IGNORED:"IGNORED"},r=Object.values(E);e.exports={EVENT:{PROCESS:{EXIT:"process:exit",EXIT_CODE:{FAILURE:"process:exit-code:failure"}},DATABASE:{RECORDSET:{CREATE:"database:recordset:create",CLOSED:"database:recordset:closed"},RECORD:{CREATE:"database:record:create",UPDATE:"database:record:update",CLOSE:"database:record:close"},PROCESS:{ENDED:"database:process:ended"}},SUITE:{STARTED:"suite:started",HOOKS:{REGISTER:"suite:hooks:register",UNREGISTER:"suite:hooks:unregister"},ENDED:"suite:ended"},SPEC:{SETUP:{REGISTER:"spec:before-each:register",UNREGISTER:"spec:before-each:unregister"},TEARDOWN:{REGISTER:"spec:after-each:register",UNREGISTER:"spec:after-each:unregister"},STARTED:"spec:started",SUCCESS:"spec:success",IGNORE:"spec:ignore",FAILURE:"spec:failure",ENDED:"spec:ended"},REPORTER:{REPORT:{START:"reporter:report:start",ENDED:"reporter:report:ended"}}},RESULT:E,RESULTS:r}},function(e,t){e.exports=require("events")},function(e,t){e.exports={isNumber:e=>"[object Number]"===Object.prototype.toString.call(e),isFunction:e=>/\[object (Async)?Function]/.test(Object.prototype.toString.call(e)),isObject:e=>"[object Object]"===Object.prototype.toString.call(e)}},function(e,t,E){const{EVENT:r,RESULT:s}=E(0),o=E(4),n=E(7),c=E(8),{spec:i,xspec:a,Spec:R}=E(9),{suite:S,Suite:T}=E(10);!function(){this._reporters=[o],T.on(r.SUITE.STARTED,(e,t)=>{n.emit(r.DATABASE.RECORDSET.CREATE,e,t)}),T.on(r.SUITE.HOOKS.REGISTER,(e,t)=>{R.emit(r.SPEC.SETUP.REGISTER,e),R.emit(r.SPEC.TEARDOWN.REGISTER,t)}),T.on(r.SUITE.HOOKS.UNREGISTER,()=>{R.emit(r.SPEC.SETUP.UNREGISTER),R.emit(r.SPEC.TEARDOWN.UNREGISTER)}),R.on(r.SPEC.STARTED,e=>{n.emit(r.DATABASE.RECORD.CREATE,e)}),R.on(r.SPEC.SUCCESS,e=>{n.emit(r.DATABASE.RECORD.UPDATE,e,s.SUCCESS)}),R.on(r.SPEC.IGNORE,e=>{n.emit(r.DATABASE.RECORD.UPDATE,e,s.IGNORED)}),R.on(r.SPEC.FAILURE,(e,t)=>{n.emit(r.DATABASE.RECORD.UPDATE,e,s.FAILURE,t),c.emit(r.PROCESS.EXIT_CODE.FAILURE)}),R.on(r.SPEC.ENDED,e=>{n.emit(r.DATABASE.RECORD.CLOSE,e)}),n.on(r.DATABASE.PROCESS.ENDED,e=>{this._reporters.forEach(t=>{t.emit(r.REPORTER.REPORT.START,e)})}),n.on(r.DATABASE.RECORDSET.CLOSED,e=>{T.emit(r.SUITE.ENDED,e)}),this._reporters.forEach(e=>{e.on(r.REPORTER.REPORT.ENDED,()=>{c.emit(r.PROCESS.EXIT)})})}();const p={};e.exports={suite:S.bind(p),spec:i.bind(p),xspec:a.bind(p)}},function(e,t,E){const r=E(1),{printDatabase:s}=E(5),{EVENT:o}=E(0);e.exports=new class extends r{constructor(){super(),this.on(o.REPORTER.REPORT.START,async e=>{await s(e),this.emit(o.REPORTER.REPORT.ENDED)})}}},function(e,t,E){const{isFunction:r}=E(2),{TEXT_FORMAT:s}=E(6),{RESULT:o}=E(0),n=(...e)=>{const t=[...e,s.RESET,"\n"];return process.stdout.write(t.map(String).join(""))},c=e=>r(e)?e.name:String(e),i=(e,t,E="")=>{const r={};return n(s.BOLD,`${E}${t.toUpperCase()}`),Object.entries(e).forEach(([e,c])=>{if(!(c.meta&&c.meta.debug)){c.meta?Object.assign(r,i(c,e,`${E}    `)):c.result===o.SUCCESS?n(s.GREEN,`${E} âœ” ${e}`):c.result===o.IGNORED?n(s.YELLOW,`${E} - ${e}`):c.result===o.PENDING?n(s.GREY,`${E} . ${e}`):(n(s.RED,`${E} âœ• ${e}`),r[`${t} > ${e}`]=c.payload)}}),r};e.exports={printDatabase:async e=>{let t={};Object.entries(e).forEach(([e,E])=>{t=i(E,e)});const E=Object.entries(t);E.length&&(n(s.BOLD,"\nError details:"),E.forEach((e,t)=>{const E=e[0],r=e[1];n(s.BOLD,`\n${t+1}) ${E}`),(e=>{const t=(e=>e.message?e.message:e.toString().split(":").slice(-1)[0])(e);if((e=>"ERR_ASSERTION"===e.code||0===e.toString().indexOf("AssertionError"))(e)){const E=c(e.operator),r=c(e.expected),o=c(e.actual);n(`ASSERTION FAILURE: ${t}`),"fail"===E?n("\tUnexpected:\t",s.RED,`${o}`):!E&&e.expected&&e.actual&&(n("\tExpected:\t",s.GREEN,r),n("\tActual:\t\t",s.RED,o))}else n(`ERROR: ${t}`);n(s.GREY,e.stack)})(r)}))}}},function(e,t){e.exports={TEXT_FORMAT:{RED:"[31m",GREEN:"[32m",YELLOW:"[33m",RESET:"[0m",BOLD:"[1m",GREY:"[90m"}}},function(e,t,E){const r=E(1),{EVENT:s,RESULT:o,RESULTS:n}=E(0);class c extends r{static parent(e,t){const[E,r]=t.split(/\.(.*)/);return r?c.parent(e[E],r):e}static open(e,t){const[E,r]=t.split(/\.(.*)/);return r?c.open(e[E],r):e[E]}static create(e,t,E){const[r,s]=t.split(/\.(.*)/);return s?(e[r]=e[r]||{},c.create(e[r],s,E)):(e[r]=E,e)}constructor(){super(),this._recordsets={},this._processed=0,this._created=0,this.on(s.DATABASE.RECORDSET.CREATE,this.createRecordset),this.on(s.DATABASE.RECORD.CREATE,this.createRecord),this.on(s.DATABASE.RECORD.UPDATE,this.updateRecord),this.on(s.DATABASE.RECORD.CLOSE,this.closeRecord)}createRecordset(e,t){const E={processed:0,path:e,debug:t};c.create(this._recordsets,e,Object.defineProperty({},"meta",{value:E}))}createRecord(e){if(!e)throw new TypeError("Missing record path!");if(!c.parent(this._recordsets,e))throw new TypeError(`Missing or null records list for ${e}`);this._created+=1,c.create(this._recordsets,e,{result:o.PENDING,payload:null})}updateRecord(e,t,E){if(!n.includes(t))throw new TypeError(`Result should be one of ${n.join()}. Got ${t}.`);const r=c.open(this._recordsets,e);if(!r)throw new TypeError(`Missing or null records list for ${e}`);r.result=t,r.payload=E}closeRecord(e){setImmediate(()=>{this._processed+=1;const t=this._processed===this._created,E=c.parent(this._recordsets,e);E.meta.processed+=1;const r=Object.values(E).filter(e=>e.meta).length,o=E.meta.processed===r;t?this.emit(s.DATABASE.PROCESS.ENDED,this._recordsets):o&&this.emit(s.DATABASE.RECORDSET.CLOSED,E.meta.path)})}}e.exports=new c},function(e,t,E){const r=E(1),{EVENT:s}=E(0);e.exports=new class extends r{constructor(){super(),this._exitCode=0,this.on(s.PROCESS.EXIT,()=>{process.exit(this._exitCode)}),this.on(s.PROCESS.EXIT_CODE.FAILURE,()=>{this._exitCode=1})}}},function(e,t,E){const r=E(1),{EVENT:s}=E(0),o=new r,n={before:null,after:null};o.on(s.SPEC.SETUP.REGISTER,e=>{n.before=e}),o.on(s.SPEC.TEARDOWN.REGISTER,e=>{n.after=e}),o.on(s.SPEC.SETUP.UNREGISTER,()=>{n.before=null}),o.on(s.SPEC.TEARDOWN.UNREGISTER,()=>{n.after=null}),e.exports={spec:async function(e,t){const E=String(e).replace("."," "),r=`${this.path}.${E}`;o.emit(s.SPEC.STARTED,r),n.before&&n.before();try{await t(),o.emit(s.SPEC.SUCCESS,r)}catch(e){o.emit(s.SPEC.FAILURE,r,e)}n.after&&n.after(),o.emit(s.SPEC.ENDED,r)},xspec:async function(e){const t=String(e).replace("."," "),E=`${this.path}.${t}`;o.emit(s.SPEC.STARTED,E),o.emit(s.SPEC.IGNORE,E),o.emit(s.SPEC.ENDED,E)},Spec:o}},function(e,t,E){const r=E(1),{isFunction:s,isObject:o}=E(2),{EVENT:n}=E(0),c=new r;e.exports={suite:function(e,...t){const E=String(e).replace("."," "),r=this.path,i=r?`${r}.${E}`:E,a={title:E,setup:Function(),teardown:Function(),eachSetup:Function(),eachTeardown:Function()},{options:R,callback:S}=function(e,t){const E=e[0],r=e[1];switch(e.length){case 1:if(!s(E))throw new TypeError("Second argument must be a function!");return{options:t,callback:E};case 2:if(!o(E))throw new TypeError("Second argument must be an object!");if(!s(r))throw new TypeError("Third argument must be a function!");return{options:Object.assign({},t,E),callback:r};default:throw new TypeError(`Invalid arguments! Expected (title: string, options?: object, callback: function). Actual: ${e.map(String).join()}`)}}(t,a);if(c.emit(n.SUITE.STARTED,i,R.test),c.emit(n.SUITE.HOOKS.REGISTER,R.eachSetup,R.eachTeardown),!s(R.setup))throw new TypeError("Setup must be a function!");R.setup(),S.call(Object.assign(this,{path:i})),Object.assign(this,{path:r}),c.on(n.SUITE.ENDED,e=>{if(e===i){if(!s(R.teardown))throw new TypeError("Teardown must be a function!");R.teardown(),c.emit(n.SUITE.HOOKS.UNREGISTER),c.removeAllListeners(n.SUITE.ENDED)}})},Suite:c}}]));