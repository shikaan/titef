!function(t,e){for(var r in e)t[r]=e[r]}(exports,function(t){var e={};function r(s){if(e[s])return e[s].exports;var o=e[s]={i:s,l:!1,exports:{}};return t[s].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=t,r.c=e,r.d=function(t,e,s){r.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:s})},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=4)}([function(t,e,r){const s=r(6),o=()=>Math.random().toString(36).slice(2),n=t=>Array.isArray(t)&&t[t.length-1];class i{static error(...t){process.stdout.write(["[ERROR]",...t,"\n"].map(String).join(" "))}static info(...t){process.stdout.write(["[INFO]",...t,"\n"].map(String).join(" "))}}t.exports={isNumber:t=>"[object Number]"===Object.prototype.toString.call(t),isFunction:t=>/\[object (Async)?Function]/.test(Object.prototype.toString.call(t)),isObject:t=>"[object Object]"===Object.prototype.toString.call(t),LoggingEventEmitter:class extends s{on(t,e){super.on(t,(...r)=>{const s=n(r),o=s&&s.uid;i.info(`[${this.name}]`,`\t(${o})\t`,"receive",t),e(...r,{uid:o})})}emit(t,...e){const r=n(e),s=r&&r.uid||o();i.info(`[${this.name}]`,`\t(${s})\t`,"emit\t",t),super.emit(t,...e,{uid:s})}constructor(t){super(),this.name=t}},log:i}},function(t,e){const r={PENDING:"PENDING",SUCCESS:"SUCCESS",FAILURE:"FAILURE",IGNORED:"IGNORED"},s=Object.values(r);t.exports={records:{},promises:{},RESULT:r,RESULTS:s,TEXT_FORMAT:{RED:"[31m",GREEN:"[32m",YELLOW:"[33m",RESET:"[0m",BOLD:"[1m",GREY:"[90m"}}},function(t,e){let r=0;t.exports={getExitCode:()=>r,setExitCode:t=>{r=t}}},function(t,e,r){const{LoggingEventEmitter:s}=r(0),{RESULT:o}=r(1),{printRecords:n}=r(7),{updateRecord:i,saveRecord:c,startSuite:a}=r(8);t.exports={updateRecord:i,printRecords:n,RESULT:o,saveRecord:c,startSuite:a,Reporter:new class extends s{constructor(t){super(t),this.on("spec:start",(t,e)=>{c(t,e)}),this.on("spec:success",t=>{i(t,o.SUCCESS)}),this.on("spec:failure",(t,e)=>{i(t,o.FAILURE,e)}),this.on("spec:ignored",t=>{i(t,o.IGNORED)})}}("Reporter")}},function(t,e,r){const{suite:s}=r(5),{spec:o,xspec:n}=r(10);t.exports={suite:s,spec:o,xspec:n}},function(t,e,r){const{getExitCode:s}=r(2),{printRecords:o,startSuite:n}=r(3),{log:i,isFunction:c,isObject:a}=r(0),{ERROR:u}=r(9);t.exports={suite:async(t,...e)=>{const r=String(t);"test"!==process.env.TITEF_ENV&&n(r);const p={title:r,setup:()=>{},teardown:()=>{}},{options:E,callback:l}=((t,e)=>{const r=t[0],s=t[1];switch(t.length){case 1:if(!c(r))throw i.error("Second argument must be a function!"),new TypeError(u.INVALID_ARGUMENT);return{options:e,callback:r};case 2:if(!a(r))throw i.error("Second argument must be an object!"),new TypeError(u.INVALID_ARGUMENT);if(!c(s))throw i.error("Third argument must be a function!"),new TypeError(u.INVALID_ARGUMENT);return{options:Object.assign({},e,r),callback:s};default:throw i.error("Invalid arguments! Expected (title: string, options?: object, callback: function). Actual: ",t),new TypeError(u.INVALID_ARGUMENT)}})(e,p);if(!c(E.setup))throw i.error("Setup must be a function!"),new TypeError(u.INVALID_ARGUMENT);if(E.setup(),await l(),!c(E.teardown))throw i.error("Teardown must be a function!"),new TypeError(u.INVALID_ARGUMENT);E.teardown(),"test"!==process.env.TITEF_ENV&&(await o(),process.exit(s()))}}},function(t,e){t.exports=require("events")},function(t,e,r){const{isFunction:s}=r(0),{records:o,promises:n,RESULT:i,TEXT_FORMAT:c}=r(1),a=(...t)=>{const e=[...t,c.RESET,"\n"];return process.stdout.write(e.map(String).join(""))},u=t=>s(t)?t.name:String(t);t.exports={printRecords:async()=>{const t={};await Promise.all(...Object.values(n)),Object.keys(o).forEach(e=>{a(c.BOLD,`SUITE: ${e}`),Object.values(o[e]).forEach(e=>{e.result===i.SUCCESS?a(c.GREEN,`[ âœ” ] ${e.title}`):e.result===i.IGNORED?a(c.YELLOW,`[ - ] ${e.title}`):e.result===i.PENDING?a(c.GREY,`[...] ${e.title}`):(a(c.RED,`[ âœ• ] ${e.title}`),t[`${e.suite} > ${e.title}`]=e.payload)})});const e=Object.entries(t);e.length&&(a(c.BOLD,"\nError details:"),e.forEach((t,e)=>{const r=t[0],s=t[1];a(c.BOLD,`\n${e+1}) ${r}`),(t=>{const e=(t=>t.message?t.message:t.toString().split(":").slice(-1)[0])(t);if((t=>"ERR_ASSERTION"===t.code||0===t.toString().indexOf("AssertionError"))(t)){const r=u(t.operator),s=u(t.expected),o=u(t.actual);a(`ASSERTION FAILURE: ${e}`),"fail"===r?a("\tUnexpected:\t",c.RED,`${o}`):!r&&t.expected&&t.actual&&(a("\tExpected:\t",c.GREEN,s),a("\tActual:\t\t",c.RED,o))}else a(`ERROR: ${e}`);a(c.GREY,t.stack)})(s)}))}}},function(t,e,r){const{records:s,promises:o,RESULT:n,RESULTS:i}=r(1);let c;t.exports={saveRecord:(t,e)=>{const r=c;if(!r)throw new TypeError("Missing LAST_SUITE!");if(!t)throw new TypeError("Missing record title!");if(!s[r])throw new TypeError(`Missing or null records list for ${r}`);s[r][t]={title:t,suite:r,result:n.PENDING,payload:null},o[r]=o[r]?[...o[r],e]:[e]},updateRecord:(t,e,r)=>{const o=c;if(!o)throw new TypeError("Missing LAST_SUITE!");if(!i.includes(e))throw new TypeError(`Result should be one of ${i.join()}. Got ${e}.`);s[o][t]=Object.assign({},s[o][t],{result:e,payload:r})},startSuite:t=>{c=t,s[t]={}}}},function(t,e){const r=new Map,s={setTimeout:setTimeout,setInterval:setInterval,clearTimeout:clearTimeout,clearInterval:clearInterval};t.exports={ERROR:{INVALID_ARGUMENT:"ERR_INVALID_ARGUMENT",INTERVAL:"ERR_CLEAR_INTERVAL",TIMEOUT:"ERR_CLEAR_TIMEOUT"},rejectMap:r,oldies:s}},function(t,e,r){const{setExitCode:s}=r(2),o=r(11);t.exports={spec:async(t,e)=>{let r;const n=new Promise(t=>{r=t});o.emit("spec:start",t,n);try{await e(),o.emit("spec:success",t)}catch(e){o.emit("spec:failure",t,e),s(1)}return o.emit("spec:end"),r&&r()},xspec:async t=>{o.emit("spec:start",t,Promise.resolve()),o.emit("spec:ignored",t),o.emit("spec:end")}}},function(t,e,r){const{Reporter:s}=r(3),{LoggingEventEmitter:o}=r(0);t.exports=new class extends o{constructor(t){super(t),this._reporters=[s],this.subscribeSpecEvents()}subscribeSpecEvents(){this.on("spec:start",(...t)=>{this._reporters.forEach(e=>{e.emit("spec:start",...t)})}),this.on("spec:success",(...t)=>{this._reporters.forEach(e=>{e.emit("spec:success",...t)})}),this.on("spec:failure",(...t)=>{this._reporters.forEach(e=>{e.emit("spec:failure",...t)})}),this.on("spec:ignored",(...t)=>{this._reporters.forEach(e=>{e.emit("spec:ignored",...t)})})}}("Event Bus")}]));