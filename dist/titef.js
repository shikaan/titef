!function(t,e){for(var r in e)t[r]=e[r]}(exports,function(t){var e={};function r(o){if(e[o])return e[o].exports;var n=e[o]={i:o,l:!1,exports:{}};return t[o].call(n.exports,n,n.exports,r),n.l=!0,n.exports}return r.m=t,r.c=e,r.d=function(t,e,o){r.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:o})},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=4)}([function(t,e){const r={PENDING:"PENDING",SUCCESS:"SUCCESS",FAILURE:"FAILURE",IGNORED:"IGNORED"},o=Object.values(r);t.exports={records:{},promises:{},RESULT:r,RESULTS:o,TEXT_FORMAT:{RED:"[31m",GREEN:"[32m",YELLOW:"[33m",RESET:"[0m",BOLD:"[1m",GREY:"[90m"}}},function(t,e){let r=0;t.exports={getExitCode:()=>r,setExitCode:t=>{r=t}}},function(t,e,r){const{RESULT:o}=r(0),{printRecords:n}=r(6),{updateRecord:s,saveRecord:c,startSuite:i}=r(7);t.exports={updateRecord:s,printRecords:n,RESULT:o,saveRecord:c,startSuite:i}},function(t,e){t.exports={isNumber:t=>"[object Number]"===Object.prototype.toString.call(t),isFunction:t=>/\[object (Async)?Function]/.test(Object.prototype.toString.call(t)),isObject:t=>"[object Object]"===Object.prototype.toString.call(t),log:class{static error(...t){process.stdout.write(["[ERROR]",...t,"\n"].map(String).join(""))}static info(...t){process.stdout.write(["[INFO]",...t,"\n"].map(String).join(""))}}}},function(t,e,r){const{suite:o}=r(5),{spec:n,xspec:s}=r(9);t.exports={suite:o,spec:n,xspec:s}},function(t,e,r){const o=r(1).getExitCode,{printRecords:n,startSuite:s}=r(2),{log:c,isFunction:i,isObject:a}=r(3),{ERROR:u}=r(8);t.exports={suite:async(t,...e)=>{const r=String(t);s(r);const E={title:r,setup:()=>{},teardown:()=>{}},{options:l,callback:p}=((t,e)=>{const r=t[0],o=t[1];switch(t.length){case 1:if(!i(r))throw c.error("Second argument must be a function!"),new TypeError(u.INVALID_ARGUMENT);return{options:e,callback:r};case 2:if(!a(r))throw c.error("Second argument must be an object!"),new TypeError(u.INVALID_ARGUMENT);if(!i(o))throw c.error("Third argument must be a function!"),new TypeError(u.INVALID_ARGUMENT);return{options:Object.assign({},e,r),callback:o};default:throw c.error("Invalid arguments! Expected (title: string, options?: object, callback: function), Actual",t),new TypeError(u.INVALID_ARGUMENT)}})(e,E);if(!i(l.setup))throw c.error("Setup must be a function!"),new TypeError(u.INVALID_ARGUMENT);if(l.setup(),await p(),!i(l.teardown))throw c.error("Teardown must be a function!"),new TypeError(u.INVALID_ARGUMENT);l.teardown(),await n(),process.exit(o())}}},function(t,e,r){const{isFunction:o}=r(3),{records:n,promises:s,RESULT:c,TEXT_FORMAT:i}=r(0),a=(...t)=>{const e=[...t,i.RESET,"\n"];return process.stdout.write(e.map(String).join(""))},u=t=>o(t)?t.name:String(t);t.exports={printRecords:async()=>{const t={};await Promise.all(...Object.values(s)),Object.keys(n).forEach(e=>{a(i.BOLD,`SUITE: ${e}`),Object.values(n[e]).forEach(e=>{e.result===c.SUCCESS?a(i.GREEN,`[ âœ” ] ${e.title}`):e.result===c.IGNORED?a(i.YELLOW,`[ - ] ${e.title}`):e.result===c.PENDING?a(i.GREY,`[...] ${e.title}`):(a(i.RED,`[ âœ• ] ${e.title}`),t[`${e.suite} > ${e.title}`]=e.payload)})});const e=Object.entries(t);e.length&&(a(i.BOLD,"\nError details:"),e.forEach((t,e)=>{const r=t[0],o=t[1];a(i.BOLD,`\n${e+1}) ${r}`),(t=>{const e=(t=>t.message?t.message:t.toString().split(":").slice(-1)[0])(t);if((t=>"ERR_ASSERTION"===t.code||0===t.toString().indexOf("AssertionError"))(t)){const r=u(t.operator),o=u(t.expected),n=u(t.actual);a(`ASSERTION FAILURE: ${e}`),"fail"===r?a("\tUnexpected:\t",i.RED,`${n}`):!r&&t.expected&&t.actual&&(a("\tExpected:\t",i.GREEN,o),a("\tActual:\t\t",i.RED,n))}else a(`ERROR: ${e}`);a(i.GREY,t.stack)})(o)}))}}},function(t,e,r){const{records:o,promises:n,RESULT:s,RESULTS:c}=r(0);let i;t.exports={saveRecord:(t,e)=>{const r=i;if(!r)throw new TypeError("Missing LAST_SUITE!");if(!t)throw new TypeError("Missing record title!");if(!o[r])throw new TypeError(`Missing or null records list for ${r}`);o[r][t]={title:t,suite:r,result:s.PENDING,payload:null},n[r]=n[r]?[...n[r],e]:[e]},updateRecord:(t,e,r)=>{const n=i;if(!n)throw new TypeError("Missing LAST_SUITE!");if(!c.includes(e))throw new TypeError(`Result should be one of ${c.join()}. Got ${e}.`);o[n][t]=Object.assign({},o[n][t],{result:e,payload:r})},startSuite:t=>{i=t,o[t]={}}}},function(t,e){const r=new Map,o={setTimeout:setTimeout,setInterval:setInterval,clearTimeout:clearTimeout,clearInterval:clearInterval};t.exports={ERROR:{INVALID_ARGUMENT:"ERR_INVALID_ARGUMENT",INTERVAL:"ERR_CLEAR_INTERVAL",TIMEOUT:"ERR_CLEAR_TIMEOUT"},rejectMap:r,oldies:o}},function(t,e,r){const{saveRecord:o,updateRecord:n,RESULT:s}=r(2),{setExitCode:c,getExitCode:i}=r(1);t.exports={spec:async(t,e)=>{let r;const i=new Promise(t=>{r=t});o(t,i);try{await e(),n(t,s.SUCCESS)}catch(e){n(t,s.FAILURE,e),c(1)}return r&&r()},xspec:async t=>{o(t,Promise.resolve()),n(t,s.IGNORED)}}}]));