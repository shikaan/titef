{"version":3,"sources":["cli-printer.js","argv-parser.js","directory-walker.js","../_utils.js","setup/_const.js","setup/timeout.js","setup/interval.js","setup/index.js","../_const.js","../spec.js","../suite.js","../reporter/_const.js","../reporter/print.js","../reporter/index.js","../database.js","../process-manager.js","../event-bus.js","../index.js","index.js"],"names":["CLIPrinter","print","args","console","log","printHelp","printVersion","VERSION","module","exports","ArgvParser","constructor","argv","getFlagValue","flag","shortcut","find","item","getArgumentValue","argument","optionIndex","findIndex","i","includes","option","split","getParameterValue","length","getCLIOptions","help","version","extensions","directory","CLI_OPTION","HELP","EXTENSIONS","DIRECTORY","readdirSync","statSync","require","join","DirectoryWalker","options","parseOptions","hasFileAllowedExtension","filePath","some","extension","endsWith","getFiles","items","reduce","paths","itemPath","stats","isDirectory","childrenFilteredFiles","push","isNumber","value","Object","prototype","toString","call","isFunction","test","isObject","ERROR","INTERVAL","TIMEOUT","rejectMap","Map","oldies","setTimeout","setInterval","clearTimeout","clearInterval","callback","timeout","TypeError","id","rej","promise","Promise","resolve","reject","e","catch","set","get","entries","Error","delete","interval","EVENT","PROCESS","EXIT","EXIT_CODE","FAILURE","DATABASE","RECORDSET","CREATE","CLOSED","RECORD","UPDATE","CLOSE","ENDED","SUITE","STARTED","HOOKS","REGISTER","UNREGISTER","SPEC","SETUP","TEARDOWN","SUCCESS","IGNORE","REPORTER","REPORT","START","RESULT","PENDING","IGNORED","RESULTS","values","NODE_MAJOR_VERSION","Number","parseInt","exec","process","EventEmitter","emitter","hooks","before","after","spec","title","saneTitle","String","replace","suitePath","path","emit","xspec","on","fn","Spec","argumentParser","defaultOptions","opts","map","suite","oldPath","setup","Function","teardown","eachSetup","eachTeardown","silent","assign","removeAllListeners","Suite","TEXT_FORMAT","RED","GREEN","YELLOW","RESET","BOLD","GREY","line","stdout","write","getErrorName","name","getErrorMessage","error","message","slice","isAssertionFailure","code","printErrorDetails","isBeforeNodeTen","operator","expected","actual","stack","printSuite","suiteTitle","prefix","ERROR_DETAILS","meta","duration","Math","ceil","toUpperCase","forEach","specTitle","isSuite","result","payload","printDatabase","database","entriesList","index","Reporter","Database","create","obj","first","rest","open","parent","toMilliseconds","seconds","nanoseconds","ns","_recordsets","_processed","_created","createRecordset","createRecord","updateRecord","closeRecord","hrtime","processed","defineProperty","recordset","setImmediate","isLastRecord","currentSuiteLength","filter","isLastRecordInSuite","record","ProcessManager","_exitCode","exit","ConsoleReporter","EventBus","init","_reporters","reporter","ctx","api","bind","describe","it","xit","xtest","global","existsSync","main","argvParser","CLIOptions","rootDirectoryPath","directoryWalkerOptions","directoryWalker","testFiles","testFile","eval"],"mappings":";AAAA,MAAMA,EAKGC,gBAASC,GAEdC,QAAQC,OAAOF,GAGVG,mBACLL,EAAWC,MAAO,wYAcbK,sBACLN,EAAWC,MAAMM,UAIrBC,OAAOC,QAAUT;;AC9BjB,MAAMU,EAIJC,YAAYC,GACLA,KAAAA,KAAO,IAAIA,GAkBlBC,aAAaC,EAAMC,GACVA,OAAAA,IACD,KAAKH,KAAKI,KAAMC,GAASA,IAASH,GAAQG,IAASF,KACnD,KAAKH,KAAKI,KAAMC,GAASA,IAASH,GAmB1CI,iBAAiBC,EAAUJ,GACnBK,MAAAA,EAAc,KAAKR,KAAKS,UAAWC,GAAMA,EAAEC,SAASJ,IAAaG,EAAEC,SAASR,IAC5ES,EAAS,KAAKZ,KAAKQ,GAErB,OAACI,EAIEA,EAAOD,SAAS,KACnBC,EAAOC,MAAM,KAAK,GAClB,KAAKb,KAAKQ,EAAc,GALnB,GAqBXM,oBACS,OAAA,KAAKd,KAAK,KAAKA,KAAKe,OAAS,GAQtCC,gBACQC,MAAAA,EAAO,KAAKhB,aAAa,SAAU,MACnCiB,EAAU,KAAKjB,aAAa,YAAa,MACzCkB,EAAa,KAAKb,iBAAiB,eAAgB,MACnDc,EAAY,KAAKN,oBAEhB,MAAA,CACJhB,CAAAA,EAAWuB,WAAWC,MAAOL,EAC7BnB,CAAAA,EAAWuB,WAAW1B,SAAUuB,EAChCpB,CAAAA,EAAWuB,WAAWE,YAAaJ,EACnCrB,CAAAA,EAAWuB,WAAWG,WAAYJ,IAKzCtB,EAAWuB,WAAa,CACtBC,KAAM,OACN3B,QAAS,UACT4B,WAAY,aACZC,UAAW,aAGb5B,OAAOC,QAAUC;;ACtGjB,MAAM,YAAE2B,EAAF,SAAeC,GAAaC,QAAQ,OACpC,KAAEC,GAASD,QAAQ,QAGzB,MAAME,EAKJ9B,YAAYqB,EAAWU,GAChBV,KAAAA,UAAYA,EACZU,KAAAA,QAAUD,EAAgBE,aAAaD,GAQvCC,oBAAaD,GACX,MAAA,CACLX,WAAYW,EAAQX,WAAaW,EAAQX,WAAWN,MAAM,KAAO,IAUrEmB,wBAAwBC,GACf,OAAA,KAAKH,QAAQX,WAAWe,KAAMC,GAAcF,EAASG,SAASD,IAQvEE,WAMSC,OALOb,EAAY,KAAKL,WAKlBmB,OAAO,CAACC,EAAOnC,KACpBoC,MAAAA,EAAWb,EAAK,KAAKR,UAAWf,GAIlCqC,GAFUhB,EAASe,GAEbE,cAAe,CACjBC,MAAAA,EAAwB,KAAKP,SAASI,EAAU,KAAKX,SAE3DU,EAAMK,QAAQD,OACT,CAC2B,KAAKZ,wBAAwBS,IAG3DD,EAAMK,KAAKJ,GAIRD,OAAAA,GACN,KAIP5C,OAAOC,QAAUgC;;AC/DjB,MAAMiB,EAAYC,GAAoD,oBAA1CC,OAAOC,UAAUC,SAASC,KAAKJ,GAOrDK,EAAcL,GAAU,6BAA6BM,KAAKL,OAAOC,UAAUC,SAASC,KAAKJ,IAOzFO,EAAYP,GAAoD,oBAA1CC,OAAOC,UAAUC,SAASC,KAAKJ,GAE3DnD,OAAOC,QAAU,CACfiD,SAAAA,EACAM,WAAAA,EACAE,SAAAA;;ACjBF,MAAMC,EAAQ,CACZC,SAAU,qBACVC,QAAS,qBAQLC,EAAY,IAAIC,IAShBC,EAAS,CACbC,WAAAA,WAAYC,YAAAA,YAAaC,aAAAA,aAAcC,cAAAA,eAIzCpE,OAAOC,QAAU,CACf0D,MAAAA,EACAG,UAAAA,EACAE,OAAAA;;ACjCF,MAAM,SAAEd,GAAanB,QAAQ,iBACvB,MAAE4B,EAAF,UAASG,EAAT,OAAoBE,GAAWjC,QAAQ,YAU7CkC,WAAa,EAACI,EAAUC,KAClB,IAACpB,EAASoB,IAAYA,GAAW,EAC7B,MAAA,IAAIC,UAAU,wCAGlBC,IAAAA,EACAC,EAEEC,MAAAA,EAAU,IAAIC,QAAQ,CAACC,EAASC,KACpCJ,EAAMI,EACNL,EAAKR,EAAOC,WAAW,KACjB,IACFI,IACAO,IACA,MAAOE,GACPD,EAAOC,GACPd,EAAOG,aAAaK,KAErBF,KAEFS,MAAOD,IACFA,GAAAA,IAAMnB,EAAME,QAGRiB,MAAAA,EAFNd,EAAOG,aAAaK,KAQnBE,OADPZ,EAAUkB,IAAIN,EAASD,GAChBC,IAQTP,aAAgBO,CAAAA,IACR,MAACJ,EAASO,GAAU,KACpBH,EACK,CAACA,EAASZ,EAAUmB,IAAIP,IAM1B,CAACZ,EAAUoB,WARM,GAWtB,IAACL,EACG,MAAA,IAAIM,MAAM,0BAGlBN,EAAOlB,EAAME,SACbC,EAAUsB,OAAOd;;AClEnB,MAAM,SAAEpB,GAAanB,QAAQ,iBACvB,MAAE4B,EAAF,UAASG,EAAT,OAAoBE,GAAWjC,QAAQ,YAU7CmC,YAAc,EAACG,EAAUgB,KACnB,IAACnC,EAASmC,IAAaA,GAAY,EAC/B,MAAA,IAAId,UAAU,wCAGlBC,IAAAA,EACAC,EAEEC,MAAAA,EAAU,IAAIC,QAAQ,CAACC,EAASC,KACpCJ,EAAMI,EACNL,EAAKR,EAAOE,YAAY,KAClB,IACFG,IACA,MAAOS,GACPD,EAAOC,GACPd,EAAOI,cAAcI,KAEtBa,KAEFN,MAAOD,IACFA,GAAAA,IAAMnB,EAAMC,SAGRkB,MAAAA,EAFNd,EAAOI,cAAcI,KAQpBE,OADPZ,EAAUkB,IAAIN,EAASD,GAChBC,IAQTN,cAAiBM,CAAAA,IACT,MAACJ,EAASO,GAAU,KACpBH,EACK,CAACA,EAASZ,EAAUmB,IAAIP,IAM1B,CAACZ,EAAUoB,WARM,GAWtB,IAACL,EACG,MAAA,IAAIM,MAAM,mCAGlBN,EAAOlB,EAAMC,UACbE,EAAUsB,OAAOd;;AChEnBvC,QAAQ,aACRA,QAAQ;;ACHR,MAAMuD,EAAQ,CACZC,QAAS,CACPC,KAAM,eACNC,UAAW,CACTC,QAAS,8BAGbC,SAAU,CACRC,UAAW,CACTC,OAAQ,4BACRC,OAAQ,6BAEVC,OAAQ,CACNF,OAAQ,yBACRG,OAAQ,yBACRC,MAAO,yBAETV,QAAS,CACPW,MAAO,2BAGXC,MAAO,CACLC,QAAS,gBACTC,MAAO,CACLC,SAAU,uBACVC,WAAY,0BAEdL,MAAO,eAETM,KAAM,CACJC,MAAO,CACLH,SAAU,4BACVC,WAAY,+BAEdG,SAAU,CACRJ,SAAU,2BACVC,WAAY,8BAEdH,QAAS,eACTO,QAAS,eACTC,OAAQ,cACRlB,QAAS,eACTQ,MAAO,cAETW,SAAU,CACRC,OAAQ,CACNC,MAAO,wBACPb,MAAO,2BAKPc,EAAS,CACbC,QAAS,UACTN,QAAS,UACTjB,QAAS,UACTwB,QAAS,WAGLC,EAAU/D,OAAOgE,OAAOJ,GAExBK,EAAqBC,OAAOC,SAAU,SAAUC,KAAKC,QAAQnG,SAAS,GAAI,IAEhFtB,OAAOC,QAAU,CACfqF,MAAAA,EACA+B,mBAAAA,EACAL,OAAAA,EACAG,QAAAA;;ACnEF,MAAMO,EAAe3F,QAAQ,WACvB,MAAEuD,GAAUvD,QAAQ,YAEpB4F,EAAU,IAAID,EACdE,EAAQ,CAAEC,OAAQ,GAAIC,MAAO,IAkBnC,eAAeC,EAAKC,EAAO3D,GAEnB4D,MAAAA,EAAYC,OAAOF,GAAOG,QAAQ,IAAK,KACvCC,EAAY,KAAKC,KACjBA,KAAUD,KAAaH,IAE7BN,EAAQW,KAAKhD,EAAMkB,KAAKJ,QAASiC,GAE7BT,EAAMC,QAAUD,EAAMC,OAAOO,IAC/BR,EAAMC,OAAOO,KAGX,UACI/D,IACNsD,EAAQW,KAAKhD,EAAMkB,KAAKG,QAAS0B,GACjC,MAAOvD,GACP6C,EAAQW,KAAKhD,EAAMkB,KAAKd,QAAS2C,EAAMvD,GAGrC8C,EAAME,OAASF,EAAME,MAAMM,IAC7BR,EAAME,MAAMM,KAGdT,EAAQW,KAAKhD,EAAMkB,KAAKN,MAAOmC,GAGjC,eAAeE,EAAMP,GAEbC,MAAAA,EAAYC,OAAOF,GAAOG,QAAQ,IAAK,KACvCE,KAAU,KAAKA,QAAQJ,IAE7BN,EAAQW,KAAKhD,EAAMkB,KAAKJ,QAASiC,GACjCV,EAAQW,KAAKhD,EAAMkB,KAAKI,OAAQyB,GAChCV,EAAQW,KAAKhD,EAAMkB,KAAKN,MAAOmC,GAjDjCV,EAAQa,GAAGlD,EAAMkB,KAAKC,MAAMH,SAAU,CAAC+B,EAAMI,KAC3Cb,EAAMC,OAAOQ,GAAQI,IAGvBd,EAAQa,GAAGlD,EAAMkB,KAAKE,SAASJ,SAAU,CAAC+B,EAAMI,KAC9Cb,EAAME,MAAMO,GAAQI,IAGtBd,EAAQa,GAAGlD,EAAMkB,KAAKC,MAAMF,WAAa8B,IACvCT,EAAMC,OAAOQ,GAAQ,OAGvBV,EAAQa,GAAGlD,EAAMkB,KAAKE,SAASH,WAAa8B,IAC1CT,EAAME,MAAMO,GAAQ,OAuCtBrI,OAAOC,QAAU,CAAE8H,KAAAA,EAAMQ,MAAAA,EAAOG,KAAMf;;ACgCtC,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,KAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,cAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,0BAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,IAAA,EAAA,OAAA,IAAA,QAAA,SAAA,GAAA,OAAA,eAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EA1FA,MAAMD,EAAe3F,QAAQ,WACvB,WACJyB,EADI,SAEJE,GACE3B,QAAQ,aAEN,MAAEuD,GAAUvD,QAAQ,YAEpB4F,EAAU,IAAID,EAEpB,SAASiB,EAAejJ,EAAMkJ,GACtBC,MAAAA,EAAOnJ,EAAK,GACZ+I,EAAK/I,EAAK,GACRA,OAAAA,EAAKyB,QACN,KAAA,EACC,IAACqC,EAAWqF,GACR,MAAA,IAAItE,UAAU,uCAEf,MAAA,CACLrC,QAAS0G,EACTvE,SAAUwE,GAET,KAAA,EACC,IAACnF,EAASmF,GACN,MAAA,IAAItE,UAAU,sCAGlB,IAACf,EAAWiF,GACR,MAAA,IAAIlE,UAAU,sCAGf,MAAA,CACLrC,QAAc0G,EAAAA,GAAAA,EAAmBC,GAAAA,GACjCxE,SAAUoE,GAGd,QACQ,MAAA,IAAIlE,wGACR7E,EAAKoJ,IAAIZ,QAAQlG,WAIzB,SAAS+G,EAAMf,KAAUtI,GAEjBuI,MAAAA,EAAYC,OAAOF,GAAOG,QAAQ,IAAK,KACvCa,EAAU,KAAKX,KACfA,EAAOW,KAAaA,KAAWf,IAAcA,EAE7CW,EAAiB,CACrBZ,MAAOC,EAEPgB,MAAOC,WAEPC,SAAUD,WAEVE,UAAWF,WAEXG,aAAcH,WACdI,QAAQ,IAGJ,QAAEpH,EAAF,SAAWmC,GAAasE,EAAejJ,EAAMkJ,GAK/CpF,GAHJmE,EAAQW,KAAKhD,EAAMa,MAAMC,QAASiC,EAAMnG,EAAQoH,QAChD3B,EAAQW,KAAKhD,EAAMa,MAAME,MAAMC,SAAU+B,EAAMnG,EAAQkH,UAAWlH,EAAQmH,eAEtE7F,EAAWtB,EAAQ+G,OAGf,MAAA,IAAI1E,UAAU,6BAFpBrC,EAAQ+G,QAKV5E,EAASd,KAAKH,OAAOmG,OAAO,KAAM,CAAElB,KAAAA,KAEpCjF,OAAOmG,OAAO,KAAM,CAAElB,KAAMW,IAE5BrB,EAAQa,GAAGlD,EAAMa,MAAMD,MAAQkC,IACzBA,GAAAA,IAAcC,EAAM,CAClB7E,IAAAA,EAAWtB,EAAQiH,UAGf,MAAA,IAAI5E,UAAU,gCAFpBrC,EAAQiH,WAKVxB,EAAQW,KAAKhD,EAAMa,MAAME,MAAME,YAC/BoB,EAAQ6B,mBAAmBlE,EAAMa,MAAMD,UAK7ClG,OAAOC,QAAU,CAAE8I,MAAAA,EAAOU,MAAO9B;;AC1FjC,MAAM+B,EAAc,CAClBC,IAAK,QACLC,MAAO,QACPC,OAAQ,QACRC,MAAO,OACPC,KAAM,OACNC,KAAM,SAGRhK,OAAOC,QAAU,CACfyJ,YAAAA;;ACVF,MAAM,WAAElG,GAAezB,QAAQ,cACzB,YAAE2H,GAAgB3H,QAAQ,aAC1B,mBAAEsF,EAAF,OAAsBL,GAAWjF,QAAQ,aAKzCtC,EAAQ,IAAIC,KACVuK,MAAAA,EAAO,IAAIvK,EAAMgK,EAAYI,MAAO,MACnCrC,OAAAA,QAAQyC,OAAOC,MAAMF,EAAKnB,IAAIZ,QAAQlG,KAAK,MAO9CoI,EAAgBjH,GAAWK,EAAWL,GAASA,EAAMkH,KAAOnC,OAAO/E,GAOnEmH,EAAmBC,GACnBA,EAAMC,QACDD,EAAMC,QAIRD,EAAMjH,WAAWrC,MAAM,KAAKwJ,OAAO,GAAG,GAQzCC,EAAsBH,GAAyB,kBAAfA,EAAMI,MAA4BJ,EAAMjH,WAAWvC,SAAS,kBAO5F6J,EAAqBL,IACnBC,MAAAA,EAAUF,EAAgBC,GAG1BM,EAAkBxD,EAAqB,GAEzCqD,GAAAA,EAAmBH,GAAQ,CACvBO,MAAAA,EAAWV,EAAaG,EAAMO,UAC9BC,EAAWX,EAAaG,EAAMQ,UAC9BC,EAASZ,EAAaG,EAAMS,QAE9BH,GACFpL,wBAA4B+K,KAUb,SAAbM,EACFrL,EAAM,kBAAmBiK,EAAYC,OAAQqB,MACnCF,GAAYP,EAAMQ,UAAYR,EAAMS,SAC9CvL,EAAM,gBAAiBiK,EAAYE,MAAOmB,GAC1CtL,EAAM,gBAAiBiK,EAAYC,IAAKqB,SAEjCH,GACTpL,YAAgB+K,KAGlB/K,EAAMiK,EAAYM,KAAMO,EAAMU,QAG1BC,EAAa,CAACnC,EAAOoC,EAAYC,EAAS,MACxCC,MAAAA,EAAgB,GAElB,IAACtC,EAAMuC,KAAKhC,OAAQ,CAEhBiC,MAAAA,EAAWxC,EAAMuC,KAAKC,SAAW,IACnC,CAAC7B,EAAYI,MAAOJ,EAAYG,YAAa2B,KAAKC,KAAK1C,EAAMuC,KAAKC,gBAClE,GAEJ9L,EAAMiK,EAAYK,QAASqB,IAASD,EAAWO,mBAAoBH,GA+B9DF,OA5BPjI,OACG8B,QAAQ6D,GACR4C,QAAQ,EAAEC,EAAW7D,MAGhB,KAFcA,EAAKuD,MAAQvD,EAAKuD,KAAKhC,QAAWP,EAAMuC,KAAKhC,QAEhD,CAGTuC,GAFY9D,EAAKuD,KAGnBlI,OAAOmG,OAAO8B,EAAeH,EAAWnD,EAAM6D,KAAcR,cACvD,CAECG,MAAAA,EAAWxD,EAAKwD,SAAW,IAAM,CAAC7B,EAAYG,YAAa2B,KAAKC,KAAK1D,EAAKwD,gBAAkB,GAE9FxD,EAAK+D,SAAW9E,EAAOL,QACzBlH,EAAMiK,EAAYE,SAAUwB,OAAYQ,OAAgBL,GAC/CxD,EAAK+D,SAAW9E,EAAOE,QAChCzH,EAAMiK,EAAYG,UAAWuB,OAAYQ,OAAgBL,GAChDxD,EAAK+D,SAAW9E,EAAOC,QAChCxH,EAAMiK,EAAYM,QAASoB,OAAYQ,OAAgBL,IAEvD9L,EAAMiK,EAAYC,OAAQyB,OAAYQ,KACtCP,KAAiBF,OAAgBS,KAAe7D,EAAKgE,aAMxDV,GAOHW,EAAgB,MAAA,IAChBX,IAAAA,EAAgB,GAEpBjI,OAAO8B,QAAQ+G,GAAUN,QAAQ,EAAE3D,EAAOe,MACxCsC,EAAgBH,EAAWnC,EAAOf,GAClCvI,EAAM,iBAAkBiK,EAAYG,UAAW2B,KAAKC,KAAK1C,EAAMuC,KAAKC,UAAY,UAG5EW,MAAAA,EAAc9I,OAAO8B,QAAQmG,GAC/Ba,EAAY/K,SACd1B,EAAMiK,EAAYK,KAAM,oBAExBmC,EAAYP,QAAQ,CAAClL,EAAM0L,KACnBnE,MAAAA,EAAQvH,EAAK,GACb8J,EAAQ9J,EAAK,GAEnBhB,EAAMiK,EAAYK,UAAWoC,EAAQ,MAAMnE,KAC3C4C,EAAkBL,OAMxBvK,OAAOC,QAAU,CACf+L,cAAAA;;ACtJF,MAAMtE,EAAe3F,QAAQ,WACvB,cAAEiK,GAAkBjK,QAAQ,YAC5B,MAAEuD,GAAUvD,QAAQ,aAG1B,MAAMqK,UAAiB1E,EACrBvH,cACE,QAEKqI,KAAAA,GAAGlD,EAAMuB,SAASC,OAAOC,MAAO,MAAA,UAC7BiF,EAAcC,GACf3D,KAAAA,KAAKhD,EAAMuB,SAASC,OAAOZ,UAKtClG,OAAOC,QAAU,IAAImM;;ACfrB,MAAM1E,EAAe3F,QAAQ,WACvB,MAAEuD,EAAF,OAAS0B,EAAT,QAAiBG,GAAYpF,QAAQ,YAE3C,MAAMsK,UAAiB3E,EAUd4E,cAAOC,EAAKlE,EAAMlF,GACjB,MAACqJ,EAAOC,GAAQpE,EAAKpH,MAAM,UAE7BwL,OAAAA,GACFF,EAAIC,GAASD,EAAIC,IAAU,GAEpBH,EAASC,OAAOC,EAAIC,GAAQC,EAAMtJ,KAE3CoJ,EAAIC,GAASrJ,EACNoJ,GAWFG,YAAKH,EAAKlE,GACT,MAACmE,EAAOC,GAAQpE,EAAKpH,MAAM,UAC1BwL,OAAAA,EAAOJ,EAASK,KAAKH,EAAIC,GAAQC,GAAQF,EAAIC,GAW/CG,cAAOJ,EAAKlE,GACX,MAACmE,EAAOC,GAAQpE,EAAKpH,MAAM,UAC1BwL,OAAAA,EAAOJ,EAASM,OAAOJ,EAAIC,GAAQC,GAAQF,EAU7CK,uBAAgBC,EAASC,IAEvBC,OADe,IAAVF,EAAiBC,GACjB,IAGd3M,cACE,QAEK6M,KAAAA,YAAc,GACdC,KAAAA,WAAa,EACbC,KAAAA,SAAW,EAEX1E,KAAAA,GAAGlD,EAAMK,SAASC,UAAUC,OAAQ,KAAKsH,iBACzC3E,KAAAA,GAAGlD,EAAMK,SAASI,OAAOF,OAAQ,KAAKuH,cACtC5E,KAAAA,GAAGlD,EAAMK,SAASI,OAAOC,OAAQ,KAAKqH,cACtC7E,KAAAA,GAAGlD,EAAMK,SAASI,OAAOE,MAAO,KAAKqH,aAG5CH,gBAAgB9E,EAAMiB,GACdgC,MAAAA,EAAO,CACXC,SAAU9D,QAAQ8F,SAClBC,UAAW,EACXnF,KAAAA,EACAiB,OAAAA,GAEF+C,EAASC,OAAO,KAAKU,YAAa3E,EAAMjF,OAAOqK,eAAe,GAAI,OAAQ,CAAEtK,MAAOmI,KAGrF8B,aAAa/E,GACP,IAACA,EACG,MAAA,IAAI9D,UAAU,wBAIlB,IADW8H,EAASM,OAAO,KAAKK,YAAa3E,GAEzC,MAAA,IAAI9D,8CAA8C8D,KAGrD6E,KAAAA,UAAY,EAEjBb,EAASC,OAAO,KAAKU,YAAa3E,EAAM,CACtCyD,OAAQ9E,EAAOC,QACf8E,QAAS,KACTR,SAAU9D,QAAQ8F,WAItBF,aAAahF,EAAMyD,EAAQC,GACrB,IAAC5E,EAAQpG,SAAS+K,GACd,MAAA,IAAIvH,qCAAqC4C,EAAQnF,eAAe8J,MAGlE4B,MAAAA,EAAYrB,EAASK,KAAK,KAAKM,YAAa3E,GAC9C,IAACqF,EACG,MAAA,IAAInJ,8CAA8C8D,KAG1DqF,EAAU5B,OAASA,EACnB4B,EAAU3B,QAAUA,EAGtBuB,YAAYjF,GACVsF,aAAa,KAENV,KAAAA,YAAc,EACbW,MAAAA,EAAe,KAAKX,aAAe,KAAKC,SAGxCP,EAASN,EAASM,OAAO,KAAKK,YAAa3E,GACjDsE,EAAOrB,KAAKkC,WAAa,EACnBK,MAAAA,EAAqBzK,OAAOgE,OAAOuF,GAAQmB,OAAQrN,IAAUA,EAAK6K,MAAMnK,OACxE4M,EAAsBpB,EAAOrB,KAAKkC,YAAcK,EAElDD,GAAAA,EACFjB,EAAOrB,KAAKC,SAAWc,EAASO,eAAenF,QAAQ8F,OAAOZ,EAAOrB,KAAKC,WACrEjD,KAAAA,KAAKhD,EAAMK,SAASJ,QAAQW,MAAO,KAAK8G,kBACxC,GAAIe,EACTpB,EAAOrB,KAAKC,SAAWc,EAASO,eAAenF,QAAQ8F,OAAOZ,EAAOrB,KAAKC,WACrEjD,KAAAA,KAAKhD,EAAMK,SAASC,UAAUE,OAAQ6G,EAAOrB,KAAKjD,UAClD,CACC2F,MAAAA,EAAS3B,EAASK,KAAK,KAAKM,YAAa3E,GAC/C2F,EAAOzC,SAAWc,EAASO,eAAenF,QAAQ8F,OAAOS,EAAOzC,eAMxEvL,OAAOC,QAAU,IAAIoM;;AClJrB,MAAM3E,EAAe3F,QAAQ,WACvB,MAAEuD,GAAUvD,QAAQ,YAE1B,MAAMkM,UAAuBvG,EAC3BvH,cACE,QAEK+N,KAAAA,UAAY,EAEZ1F,KAAAA,GAAGlD,EAAMC,QAAQC,KAAM,KAC1BmI,aAAa,KACXlG,QAAQ0G,KAAK,KAAKD,eAIjB1F,KAAAA,GAAGlD,EAAMC,QAAQE,UAAUC,QAAS,KAClCwI,KAAAA,UAAY,KAKvBlO,OAAOC,QAAU,IAAIgO;;ACrBrB,MAAM,MAAE3I,EAAF,OAAS0B,GAAWjF,QAAQ,YAC5BqM,EAAkBrM,QAAQ,cAC1BsK,EAAWtK,QAAQ,cACnBkM,EAAiBlM,QAAQ,sBACzB,KAAE2G,GAAS3G,QAAQ,WACnB,MAAE0H,GAAU1H,QAAQ,WAE1B,MAAMsM,EACJC,OAEOC,KAAAA,WAAa,CAACH,GAGnB3E,EAAMjB,GAAGlD,EAAMa,MAAMC,QAAS,CAACiC,EAAMiB,KACnC+C,EAAS/D,KAAKhD,EAAMK,SAASC,UAAUC,OAAQwC,EAAMiB,KAEvDG,EAAMjB,GAAGlD,EAAMa,MAAME,MAAMC,SAAU,CAAC+B,EAAMe,EAAWC,KACrDX,EAAKJ,KAAKhD,EAAMkB,KAAKC,MAAMH,SAAU+B,EAAMe,GAC3CV,EAAKJ,KAAKhD,EAAMkB,KAAKE,SAASJ,SAAU+B,EAAMgB,KAEhDI,EAAMjB,GAAGlD,EAAMa,MAAME,MAAME,WAAY,KACrCmC,EAAKJ,KAAKhD,EAAMkB,KAAKC,MAAMF,YAC3BmC,EAAKJ,KAAKhD,EAAMkB,KAAKE,SAASH,cAIhCmC,EAAKF,GAAGlD,EAAMkB,KAAKJ,QAAUiC,IAC3BgE,EAAS/D,KAAKhD,EAAMK,SAASI,OAAOF,OAAQwC,KAE9CK,EAAKF,GAAGlD,EAAMkB,KAAKG,QAAU0B,IAC3BgE,EAAS/D,KAAKhD,EAAMK,SAASI,OAAOC,OAAQqC,EAAMrB,EAAOL,WAE3D+B,EAAKF,GAAGlD,EAAMkB,KAAKI,OAASyB,IAC1BgE,EAAS/D,KAAKhD,EAAMK,SAASI,OAAOC,OAAQqC,EAAMrB,EAAOE,WAE3DwB,EAAKF,GAAGlD,EAAMkB,KAAKd,QAAS,CAAC2C,EAAM0D,KACjCM,EAAS/D,KAAKhD,EAAMK,SAASI,OAAOC,OAAQqC,EAAMrB,EAAOtB,QAASqG,GAClEkC,EAAe3F,KAAKhD,EAAMC,QAAQE,UAAUC,WAE9CgD,EAAKF,GAAGlD,EAAMkB,KAAKN,MAAQmC,IACzBgE,EAAS/D,KAAKhD,EAAMK,SAASI,OAAOE,MAAOoC,KAI7CgE,EAAS7D,GAAGlD,EAAMK,SAASJ,QAAQW,MAAQ+F,IACpCsC,KAAAA,WAAW5C,QAAS6C,IACvBA,EAASlG,KAAKhD,EAAMuB,SAASC,OAAOC,MAAOkF,OAG/CI,EAAS7D,GAAGlD,EAAMK,SAASC,UAAUE,OAASuC,IAC5CoB,EAAMnB,KAAKhD,EAAMa,MAAMD,MAAOmC,KAI3BkG,KAAAA,WAAW5C,QAAS6C,IACvBA,EAAShG,GAAGlD,EAAMuB,SAASC,OAAOZ,MAAO,KACvC+H,EAAe3F,KAAKhD,EAAMC,QAAQC,WAM1CxF,OAAOC,QAAU,IAAIoO;;AC9DrB,MAAM,KAAEtG,EAAF,MAAQQ,GAAUxG,QAAQ,WAC1B,MAAEgH,GAAUhH,QAAQ,WAEpBsM,EAAWtM,QAAQ,eAGzBsM,EAASC,OAGT,MAAMG,EAAM,GAENC,EAAM,CAEV3F,MAAOA,EAAM4F,KAAKF,GAClBG,SAAU7F,EAAM4F,KAAKF,GAGrB1G,KAAMA,EAAK4G,KAAKF,GAChBI,GAAI9G,EAAK4G,KAAKF,GACdhL,KAAMsE,EAAK4G,KAAKF,GAGhBlG,MAAOA,EAAMoG,KAAKF,GAClBK,IAAKvG,EAAMoG,KAAKF,GAChBM,MAAOxG,EAAMoG,KAAKF,IAGpBrL,OAAOmG,OAAOyF,OAAQN,GACtB1O,OAAOC,QAAUyO;;AC5BjB,MAAM,QAAE9J,SAAY7C,QAAQ,SACtB,WAAEkN,YAAelN,QAAQ,MAEzBvC,WAAauC,QAAQ,iBACrB7B,WAAa6B,QAAQ,iBACrBE,gBAAkBF,QAAQ,uBAE/B,SAASmN,OACFC,MAAAA,WAAa,IAAIjP,WAAWuH,QAAQrH,MACpCgP,WAAaD,WAAW/N,gBAE1BgO,WAAWlP,WAAWuB,WAAWC,OACnClC,WAAWK,YACX4H,QAAQ0G,KAAK,IACJiB,WAAWlP,WAAWuB,WAAW1B,WAC1CP,WAAWM,eACX2H,QAAQ0G,KAAK,IAGTkB,MAAAA,kBAAoBzK,QAAQwK,WAAWlP,WAAWuB,WAAWG,YAE/D,IAACyN,kBACG,MAAA,IAAIlK,MAAM,yEACX,IAAK8J,WAAWI,mBACf,MAAA,IAAIlK,0BAA0BkK,kFAItCtN,QAAQ,WAERA,QAAQ,eAEFuN,MAAAA,uBAAyB,CAC7B/N,WAAY6N,WAAWlP,WAAWuB,WAAWE,aAEzC4N,gBAAkB,IAAItN,gBAAgBoN,kBAAmBC,wBACzDE,UAAYD,gBAAgB9M,WAElC+M,UAAU7D,QAAS8D,WAKjBC,KAAK,UAALA,CAAgBD,YApCnB","file":"titef.js","sourceRoot":"../lib/cli","sourcesContent":["class CLIPrinter {\n  /**\n   * @private\n   * @param  {...any} args\n   */\n  static print(...args) {\n    // eslint-disable-next-line no-console\n    console.log(...args);\n  }\n\n  static printHelp() {\n    CLIPrinter.print(`Usage: titef [OPTIONS] [DIRECTORY]\n    Executes test files written in Titef (https://www.npmjs.com/package/titef) framework.\n\n    Options:\n      -h, --help                shows this help\n      -v, --version             prints version number\n      -e, --extensions [string] comma separated list of file extensions to test\n\n    Example:\n\n      titef -e spec.js,test.js ./src\n    `);\n  }\n\n  static printVersion() {\n    CLIPrinter.print(VERSION);\n  }\n}\n\nmodule.exports = CLIPrinter;\n","class ArgvParser {\n  /**\n   * @param {[]string} argv - Argv Array\n   */\n  constructor(argv) {\n    this.argv = [...argv];\n  }\n\n  /**\n   * Get flag value out of argv options array.\n   *\n   * @private\n   *\n   * @example\n   * getFlagValue(['node', '-h'], '--help', '-h')       // true\n   * getFlagValue(['node', '-h'], '--version', '-v')    // false\n   * getFlagValue(['node', '--help'], '--help', '-h')   // true\n   *\n   * @param {string} flag\n   * @param {string} shortcut\n   *\n   * @returns {boolean}\n   */\n  getFlagValue(flag, shortcut) {\n    return shortcut\n      ? !!this.argv.find((item) => item === flag || item === shortcut)\n      : !!this.argv.find((item) => item === flag);\n  }\n\n  /**\n   * Get a argument value out of argv options array.\n   *\n   * @private\n   *\n   * @example\n   * getArgumentValue(['node', '-f', 'bar'], '--foo', '-f') // 'bar'\n   * getArgumentValue(['node', '-f=bar'], '--foo', '-f') // 'bar'\n   * getArgumentValue(['node', '--foo=bar'], '--foo', '-f') // 'bar'\n   * getArgumentValue(['node', '--foo=bar'], '--zoo', '-z') // ''\n   *\n   * @param {string} argument\n   * @param {string} shortcut\n   *\n   * @returns {string}\n   */\n  getArgumentValue(argument, shortcut) {\n    const optionIndex = this.argv.findIndex((i) => i.includes(argument) || i.includes(shortcut));\n    const option = this.argv[optionIndex];\n\n    if (!option) {\n      return '';\n    }\n\n    return option.includes('=')\n      ? option.split('=')[1]\n      : this.argv[optionIndex + 1];\n  }\n\n  /**\n   * Get a parameter value out of argv options array.\n   *\n   * @private\n   *\n   * @example\n   * getParameterValue(['node', '-f', 'bar', 'lol']) // 'lol'\n\n   * @param {string} argument\n   * @param {string} shortcut\n   *\n   * @returns {string}\n   */\n  getParameterValue() {\n    return this.argv[this.argv.length - 1];\n  }\n\n  /**\n   * Return CLI Options in the shape of an object\n   *\n   * @returns {{ ArgvParser.CLI_OPTION: string|boolean }}\n   */\n  getCLIOptions() {\n    const help = this.getFlagValue('--help', '-h');\n    const version = this.getFlagValue('--version', '-v');\n    const extensions = this.getArgumentValue('--extensions', '-e');\n    const directory = this.getParameterValue();\n\n    return {\n      [ArgvParser.CLI_OPTION.HELP]: help,\n      [ArgvParser.CLI_OPTION.VERSION]: version,\n      [ArgvParser.CLI_OPTION.EXTENSIONS]: extensions,\n      [ArgvParser.CLI_OPTION.DIRECTORY]: directory,\n    };\n  }\n}\n\nArgvParser.CLI_OPTION = {\n  HELP: 'help',\n  VERSION: 'version',\n  EXTENSIONS: 'extensions',\n  DIRECTORY: 'directory',\n};\n\nmodule.exports = ArgvParser;\n","const { readdirSync, statSync } = require('fs');\nconst { join } = require('path');\n\n\nclass DirectoryWalker {\n  /**\n   * @param {string} directory\n   * @param {{extensions: string}} options\n   */\n  constructor(directory, options) {\n    this.directory = directory;\n    this.options = DirectoryWalker.parseOptions(options);\n  }\n\n  /**\n   * @private\n   *\n   * @param {{extensions: string}} options\n   */\n  static parseOptions(options) {\n    return {\n      extensions: options.extensions ? options.extensions.split(',') : [],\n    };\n  }\n\n  /**\n   * @private\n   *\n   * @param {string} filePath\n   * @returns {boolean}\n   */\n  hasFileAllowedExtension(filePath) {\n    return this.options.extensions.some((extension) => filePath.endsWith(extension));\n  }\n\n  /**\n * Returns the list (possibly) filtred of all the files in the directory\n *\n *  @returns {[]string}\n */\n  getFiles() {\n    const items = readdirSync(this.directory);\n\n    /**\n    * Item can be either a file or a directory\n    */\n    return items.reduce((paths, item) => {\n      const itemPath = join(this.directory, item);\n\n      const stats = statSync(itemPath);\n\n      if (stats.isDirectory()) {\n        const childrenFilteredFiles = this.getFiles(itemPath, this.options);\n\n        paths.push(...childrenFilteredFiles);\n      } else {\n        const fileHasAllowedExtension = this.hasFileAllowedExtension(itemPath);\n\n        if (fileHasAllowedExtension) {\n          paths.push(itemPath);\n        }\n      }\n\n      return paths;\n    }, []);\n  }\n}\n\nmodule.exports = DirectoryWalker;\n","/**\n * Returns true if value is a Number\n * @param {any} value\n * @returns {boolean}\n */\nconst isNumber = (value) => Object.prototype.toString.call(value) === '[object Number]';\n\n/**\n * Returns true if value is a Function\n * @param {any} value\n * @returns {boolean}\n */\nconst isFunction = (value) => /\\[object (Async)?Function]/.test(Object.prototype.toString.call(value));\n\n/**\n * Returns true if value is a Object\n * @param {any} value\n * @returns {boolean}\n */\nconst isObject = (value) => Object.prototype.toString.call(value) === '[object Object]';\n\nmodule.exports = {\n  isNumber,\n  isFunction,\n  isObject,\n};\n","/**\n * Error has containing all possible errors\n *\n * @constant\n * @type {Object}\n * @default\n */\nconst ERROR = {\n  INTERVAL: 'ERR_CLEAR_INTERVAL',\n  TIMEOUT: 'ERR_CLEAR_TIMEOUT',\n};\n\n/**\n * A Map meant to store rejection functions for each Promise\n *\n * @type {Map<Promise, Function>}\n */\nconst rejectMap = new Map();\n\n/**\n * A reference to NodeJS's core <tt>setTimeout</tt> and <tt>setInterval</tt>\n *\n * @constant\n * @type {object}\n * @private\n */\nconst oldies = {\n  setTimeout, setInterval, clearTimeout, clearInterval,\n};\n\n\nmodule.exports = {\n  ERROR,\n  rejectMap,\n  oldies,\n};\n","/* eslint-disable no-global-assign */\nconst { isNumber } = require('../../_utils');\nconst { ERROR, rejectMap, oldies } = require('./_const');\n\n/**\n * Overrides NodeJS' core setTimeout replacing it with a Promise-based one.\n *\n * @param {function} callback   The callback to be executed after `timeout` ms\n * @param {number} timeout      How many ms to wait before calling `callback`\n *\n * @returns {Promise}\n */\nsetTimeout = (callback, timeout) => {\n  if (!isNumber(timeout) && timeout >= 0) {\n    throw new TypeError('Timeout should be a positive number!');\n  }\n\n  let id;\n  let rej;\n\n  const promise = new Promise((resolve, reject) => {\n    rej = reject;\n    id = oldies.setTimeout(() => {\n      try {\n        callback();\n        resolve();\n      } catch (e) {\n        reject(e);\n        oldies.clearTimeout(id);\n      }\n    }, timeout);\n  })\n    .catch((e) => {\n      if (e === ERROR.TIMEOUT) {\n        oldies.clearTimeout(id);\n      } else {\n        throw e;\n      }\n    });\n\n  // Save rejection function to an map of rejects\n  rejectMap.set(promise, rej);\n  return promise;\n};\n\n/**\n * Replace NodeJS' clearTimeout to deal with the Promise-based setTimeout\n *\n * @param {Promise} [promise]\n */\nclearTimeout = (promise) => {\n  const [timeout, reject] = (() => {\n    if (promise) {\n      return [promise, rejectMap.get(promise)];\n    }\n    /**\n     * Returns first reject in map if no promise is provided.\n     * Needed to use this in REPL\n     */\n    return [rejectMap.entries()];\n  })();\n\n  if (!reject) {\n    throw new Error('Unable to find timeout');\n  }\n\n  reject(ERROR.TIMEOUT);\n  rejectMap.delete(timeout);\n};\n","/* eslint-disable no-global-assign */\nconst { isNumber } = require('../../_utils');\nconst { ERROR, rejectMap, oldies } = require('./_const');\n\n/**\n * Overrides NodeJS's core setInterval replacing it with a Promise-based one.\n *\n * @param {function} callback   The callback to be executed every `interval` ms\n * @param {number} interval     How many ms to wait before `callback`\n *\n * @returns {Promise}\n */\nsetInterval = (callback, interval) => {\n  if (!isNumber(interval) && interval >= 0) {\n    throw new TypeError('Timeout should be a positive number!');\n  }\n\n  let id;\n  let rej;\n\n  const promise = new Promise((resolve, reject) => {\n    rej = reject;\n    id = oldies.setInterval(() => {\n      try {\n        callback();\n      } catch (e) {\n        reject(e);\n        oldies.clearInterval(id);\n      }\n    }, interval);\n  })\n    .catch((e) => {\n      if (e === ERROR.INTERVAL) {\n        oldies.clearInterval(id);\n      } else {\n        throw e;\n      }\n    });\n\n  // Save rejection function to an map of rejects\n  rejectMap.set(promise, rej);\n  return promise;\n};\n\n/**\n * Replace NodeJS' clearTimeout to deal with the Promise-based setTimeout\n *\n * @param {Promise} [promise]\n */\nclearInterval = (promise) => {\n  const [timeout, reject] = (() => {\n    if (promise) {\n      return [promise, rejectMap.get(promise)];\n    }\n    /**\n     * Returns first reject in map if no promise is provided.\n     * Needed to use this in REPL\n     */\n    return [rejectMap.entries()];\n  })();\n\n  if (!reject) {\n    throw new Error('Unable to find interval promise');\n  }\n\n  reject(ERROR.INTERVAL);\n  rejectMap.delete(timeout);\n};\n","/* eslint-disable no-global-assign */\n\nrequire('./timeout');\nrequire('./interval');\n\n/* eslint-enable no-global-assign */\n","const EVENT = {\n  PROCESS: {\n    EXIT: 'process:exit',\n    EXIT_CODE: {\n      FAILURE: 'process:exit-code:failure',\n    },\n  },\n  DATABASE: {\n    RECORDSET: {\n      CREATE: 'database:recordset:create',\n      CLOSED: 'database:recordset:closed',\n    },\n    RECORD: {\n      CREATE: 'database:record:create',\n      UPDATE: 'database:record:update',\n      CLOSE: 'database:record:close',\n    },\n    PROCESS: {\n      ENDED: 'database:process:ended',\n    },\n  },\n  SUITE: {\n    STARTED: 'suite:started',\n    HOOKS: {\n      REGISTER: 'suite:hooks:register',\n      UNREGISTER: 'suite:hooks:unregister',\n    },\n    ENDED: 'suite:ended',\n  },\n  SPEC: {\n    SETUP: {\n      REGISTER: 'spec:before-each:register',\n      UNREGISTER: 'spec:before-each:unregister',\n    },\n    TEARDOWN: {\n      REGISTER: 'spec:after-each:register',\n      UNREGISTER: 'spec:after-each:unregister',\n    },\n    STARTED: 'spec:started',\n    SUCCESS: 'spec:success',\n    IGNORE: 'spec:ignore',\n    FAILURE: 'spec:failure',\n    ENDED: 'spec:ended',\n  },\n  REPORTER: {\n    REPORT: {\n      START: 'reporter:report:start',\n      ENDED: 'reporter:report:ended',\n    },\n  },\n};\n\nconst RESULT = {\n  PENDING: 'PENDING',\n  SUCCESS: 'SUCCESS',\n  FAILURE: 'FAILURE',\n  IGNORED: 'IGNORED',\n};\n\nconst RESULTS = Object.values(RESULT);\n\nconst NODE_MAJOR_VERSION = Number.parseInt((/(\\d+)./).exec(process.version)[1], 10);\n\nmodule.exports = {\n  EVENT,\n  NODE_MAJOR_VERSION,\n  RESULT,\n  RESULTS,\n};\n","const EventEmitter = require('events');\nconst { EVENT } = require('./_const');\n\nconst emitter = new EventEmitter();\nconst hooks = { before: {}, after: {} };\n\nemitter.on(EVENT.SPEC.SETUP.REGISTER, (path, fn) => {\n  hooks.before[path] = fn;\n});\n\nemitter.on(EVENT.SPEC.TEARDOWN.REGISTER, (path, fn) => {\n  hooks.after[path] = fn;\n});\n\nemitter.on(EVENT.SPEC.SETUP.UNREGISTER, (path) => {\n  hooks.before[path] = null;\n});\n\nemitter.on(EVENT.SPEC.TEARDOWN.UNREGISTER, (path) => {\n  hooks.after[path] = null;\n});\n\nasync function spec(title, callback) {\n  // We use dots to split the paths...\n  const saneTitle = String(title).replace('.', ' ');\n  const suitePath = this.path;\n  const path = `${suitePath}.${saneTitle}`;\n\n  emitter.emit(EVENT.SPEC.STARTED, path);\n\n  if (hooks.before && hooks.before[suitePath]) {\n    hooks.before[suitePath]();\n  }\n\n  try {\n    await callback();\n    emitter.emit(EVENT.SPEC.SUCCESS, path);\n  } catch (e) {\n    emitter.emit(EVENT.SPEC.FAILURE, path, e);\n  }\n\n  if (hooks.after && hooks.after[suitePath]) {\n    hooks.after[suitePath]();\n  }\n\n  emitter.emit(EVENT.SPEC.ENDED, path);\n}\n\nasync function xspec(title) {\n  // We use dots to split the paths...\n  const saneTitle = String(title).replace('.', ' ');\n  const path = `${this.path}.${saneTitle}`;\n\n  emitter.emit(EVENT.SPEC.STARTED, path);\n  emitter.emit(EVENT.SPEC.IGNORE, path);\n  emitter.emit(EVENT.SPEC.ENDED, path);\n}\n\nmodule.exports = { spec, xspec, Spec: emitter };\n","const EventEmitter = require('events');\nconst {\n  isFunction,\n  isObject,\n} = require('./_utils');\n\nconst { EVENT } = require('./_const');\n\nconst emitter = new EventEmitter();\n\nfunction argumentParser(args, defaultOptions) {\n  const opts = args[0];\n  const fn = args[1];\n  switch (args.length) {\n    case 1:\n      if (!isFunction(opts)) {\n        throw new TypeError('Second argument must be a function!');\n      }\n      return {\n        options: defaultOptions,\n        callback: opts,\n      };\n    case 2:\n      if (!isObject(opts)) {\n        throw new TypeError('Second argument must be an object!');\n      }\n\n      if (!isFunction(fn)) {\n        throw new TypeError('Third argument must be a function!');\n      }\n\n      return {\n        options: { ...defaultOptions, ...opts },\n        callback: fn,\n      };\n\n    default:\n      throw new TypeError(`Invalid arguments! Expected (title: string, options?: object, callback: function). Actual: ${\n        args.map(String).join()}`);\n  }\n}\n\nfunction suite(title, ...args) {\n  // We use dots to split the paths...\n  const saneTitle = String(title).replace('.', ' ');\n  const oldPath = this.path;\n  const path = oldPath ? `${oldPath}.${saneTitle}` : saneTitle;\n\n  const defaultOptions = {\n    title: saneTitle,\n    // eslint-disable-next-line no-new-func\n    setup: Function(),\n    // eslint-disable-next-line no-new-func\n    teardown: Function(),\n    // eslint-disable-next-line no-new-func\n    eachSetup: Function(),\n    // eslint-disable-next-line no-new-func\n    eachTeardown: Function(),\n    silent: false,\n  };\n\n  const { options, callback } = argumentParser(args, defaultOptions);\n\n  emitter.emit(EVENT.SUITE.STARTED, path, options.silent);\n  emitter.emit(EVENT.SUITE.HOOKS.REGISTER, path, options.eachSetup, options.eachTeardown);\n\n  if (isFunction(options.setup)) {\n    options.setup();\n  } else {\n    throw new TypeError('Setup must be a function!');\n  }\n\n  callback.call(Object.assign(this, { path }));\n\n  Object.assign(this, { path: oldPath });\n\n  emitter.on(EVENT.SUITE.ENDED, (suitePath) => {\n    if (suitePath === path) {\n      if (isFunction(options.teardown)) {\n        options.teardown();\n      } else {\n        throw new TypeError('Teardown must be a function!');\n      }\n\n      emitter.emit(EVENT.SUITE.HOOKS.UNREGISTER);\n      emitter.removeAllListeners(EVENT.SUITE.ENDED);\n    }\n  });\n}\n\nmodule.exports = { suite, Suite: emitter };\n","const TEXT_FORMAT = {\n  RED: '\\x1b[31m',\n  GREEN: '\\x1b[32m',\n  YELLOW: '\\x1b[33m',\n  RESET: '\\x1b[0m',\n  BOLD: '\\x1b[1m',\n  GREY: '\\x1b[90m',\n};\n\nmodule.exports = {\n  TEXT_FORMAT,\n};\n","const { isFunction } = require('../_utils');\nconst { TEXT_FORMAT } = require('./_const');\nconst { NODE_MAJOR_VERSION, RESULT } = require('../_const');\n\n/**\n * Prints on stdout\n */\nconst print = (...args) => {\n  const line = [...args, TEXT_FORMAT.RESET, '\\n'];\n  return process.stdout.write(line.map(String).join(''));\n};\n\n/**\n * Gets the string name of Error entries\n * @param {any} value\n */\nconst getErrorName = (value) => (isFunction(value) ? value.name : String(value));\n\n/**\n * Tries to extract an error message from an error\n * @param error\n * @returns {string}\n */\nconst getErrorMessage = (error) => {\n  if (error.message) {\n    return error.message;\n  }\n\n  // In case of something like 'ERROR: message' returns 'message'\n  return error.toString().split(':').slice(-1)[0];\n};\n\n/**\n * Returns true if error is an Assertion Failure\n * @param error {Error}\n * @returns {boolean}\n */\nconst isAssertionFailure = (error) => error.code === 'ERR_ASSERTION' || error.toString().includes('AssertionError');\n\n/**\n * Print details of an error in the report.\n * Error can be either an assertion failure or a generic error.\n * @param error {Error}\n */\nconst printErrorDetails = (error) => {\n  const message = getErrorMessage(error);\n  // In Node 10.x.x Error Handling improved a lot,\n  // we'll use this to decide when to leave it do the job\n  const isBeforeNodeTen = NODE_MAJOR_VERSION < 10;\n\n  if (isAssertionFailure(error)) {\n    const operator = getErrorName(error.operator);\n    const expected = getErrorName(error.expected);\n    const actual = getErrorName(error.actual);\n\n    if (isBeforeNodeTen) {\n      print(`ASSERTION FAILURE: ${message}`);\n    }\n\n    /**\n     * Printing detailed report if either:\n     * - operator is generic;\n     * - operator is missing and we have expected and actual;\n     *\n     * Otherwise the message already contains the failure\n     */\n    if (operator === 'fail') {\n      print('\\tUnexpected:\\t', TEXT_FORMAT.RED, `${actual}`);\n    } else if (!operator && error.expected && error.actual) {\n      print('\\tExpected:\\t', TEXT_FORMAT.GREEN, expected);\n      print('\\tActual:\\t\\t', TEXT_FORMAT.RED, actual);\n    }\n  } else if (isBeforeNodeTen) {\n    print(`ERROR: ${message}`);\n  }\n\n  print(TEXT_FORMAT.GREY, error.stack);\n};\n\nconst printSuite = (suite, suiteTitle, prefix = '') => {\n  const ERROR_DETAILS = {};\n\n  if (!suite.meta.silent) {\n    // Printing duration only if bigger than two seconds\n    const duration = suite.meta.duration > 2000\n      ? [TEXT_FORMAT.RESET, TEXT_FORMAT.YELLOW, ` (${Math.ceil(suite.meta.duration)}ms)`]\n      : [];\n\n    print(TEXT_FORMAT.BOLD, `${prefix}${suiteTitle.toUpperCase()}`, ...duration);\n  }\n\n  Object\n    .entries(suite)\n    .forEach(([specTitle, spec]) => {\n      const isSilent = (spec.meta && spec.meta.silent) || suite.meta.silent;\n\n      if (!isSilent) {\n        const isSuite = spec.meta;\n\n        if (isSuite) {\n          Object.assign(ERROR_DETAILS, printSuite(spec, specTitle, `${prefix}    `));\n        } else {\n          // Printing duration only if bigger than half a second\n          const duration = spec.duration > 500 ? [TEXT_FORMAT.YELLOW, ` (${Math.ceil(spec.duration)}ms)`] : [];\n\n          if (spec.result === RESULT.SUCCESS) {\n            print(TEXT_FORMAT.GREEN, `${prefix} ✔ ${specTitle}`, ...duration);\n          } else if (spec.result === RESULT.IGNORED) {\n            print(TEXT_FORMAT.YELLOW, `${prefix} - ${specTitle}`, ...duration);\n          } else if (spec.result === RESULT.PENDING) {\n            print(TEXT_FORMAT.GREY, `${prefix} . ${specTitle}`, ...duration);\n          } else {\n            print(TEXT_FORMAT.RED, `${prefix} ✕ ${specTitle}`);\n            ERROR_DETAILS[`${suiteTitle} > ${specTitle}`] = spec.payload;\n          }\n        }\n      }\n    });\n\n  return ERROR_DETAILS;\n};\n\n/**\n * Prints on stdout the given in-memory database\n * @returns {Promise<void>}\n */\nconst printDatabase = async (database) => {\n  let ERROR_DETAILS = {};\n\n  Object.entries(database).forEach(([title, suite]) => {\n    ERROR_DETAILS = printSuite(suite, title);\n    print('\\n  Duration: ', TEXT_FORMAT.YELLOW, `${Math.ceil(suite.meta.duration) / 1000}s`);\n  });\n\n  const entriesList = Object.entries(ERROR_DETAILS);\n  if (entriesList.length) {\n    print(TEXT_FORMAT.BOLD, '\\nError details:');\n\n    entriesList.forEach((item, index) => {\n      const title = item[0];\n      const error = item[1];\n\n      print(TEXT_FORMAT.BOLD, `\\n${index + 1}) ${title}`);\n      printErrorDetails(error);\n    });\n  }\n};\n\n\nmodule.exports = {\n  printDatabase,\n};\n","const EventEmitter = require('events');\nconst { printDatabase } = require('./print');\nconst { EVENT } = require('../_const');\n\n\nclass Reporter extends EventEmitter {\n  constructor() {\n    super();\n\n    this.on(EVENT.REPORTER.REPORT.START, async (database) => {\n      await printDatabase(database);\n      this.emit(EVENT.REPORTER.REPORT.ENDED);\n    });\n  }\n}\n\nmodule.exports = new Reporter();\n","/* eslint-disable no-param-reassign */\nconst EventEmitter = require('events');\nconst { EVENT, RESULT, RESULTS } = require('./_const');\n\nclass Database extends EventEmitter {\n  /**\n   * Create an object with the given path and assign a value to it\n   *\n   * @example create({}, 'foo.bar', 1) === {foo: {bar: 1}}\n   *\n   * @param {Object} obj\n   * @param {String} path\n   * @param {any} value\n   */\n  static create(obj, path, value) {\n    const [first, rest] = path.split(/\\.(.*)/);\n\n    if (rest) {\n      obj[first] = obj[first] || {};\n\n      return Database.create(obj[first], rest, value);\n    }\n    obj[first] = value;\n    return obj;\n  }\n\n  /**\n   * Open an object with the given path\n   *\n   * @example open({foo: {bar: 1}}, 'foo.bar') === 1\n   *\n   * @param {Object} obj\n   * @param {String} path\n   */\n  static open(obj, path) {\n    const [first, rest] = path.split(/\\.(.*)/);\n    return rest ? Database.open(obj[first], rest) : obj[first];\n  }\n\n  /**\n   * Open an object's parent with the given path\n   *\n   * @example open({foo: {bar: 1}}, 'foo.bar') === {bar: 1}\n   *\n   * @param {Object} obj\n   * @param {String} path\n   */\n  static parent(obj, path) {\n    const [first, rest] = path.split(/\\.(.*)/);\n    return rest ? Database.parent(obj[first], rest) : obj;\n  }\n\n  /**\n   * Takes a high-resolution time tuple and converts it in ms\n   *\n   * @param {Array<Number>} hrtime\n   *\n   * @returns {number}\n   */\n  static toMilliseconds([seconds, nanoseconds]) {\n    const ns = (seconds * 1e9) + nanoseconds;\n    return ns / 1e6;\n  }\n\n  constructor() {\n    super();\n\n    this._recordsets = {};\n    this._processed = 0;\n    this._created = 0;\n\n    this.on(EVENT.DATABASE.RECORDSET.CREATE, this.createRecordset);\n    this.on(EVENT.DATABASE.RECORD.CREATE, this.createRecord);\n    this.on(EVENT.DATABASE.RECORD.UPDATE, this.updateRecord);\n    this.on(EVENT.DATABASE.RECORD.CLOSE, this.closeRecord);\n  }\n\n  createRecordset(path, silent) {\n    const meta = {\n      duration: process.hrtime(),\n      processed: 0,\n      path,\n      silent,\n    };\n    Database.create(this._recordsets, path, Object.defineProperty({}, 'meta', { value: meta }));\n  }\n\n  createRecord(path) {\n    if (!path) {\n      throw new TypeError('Missing record path!');\n    }\n\n    const parent = Database.parent(this._recordsets, path);\n    if (!parent) {\n      throw new TypeError(`Missing or null records list for ${path}`);\n    }\n\n    this._created += 1;\n\n    Database.create(this._recordsets, path, {\n      result: RESULT.PENDING,\n      payload: null,\n      duration: process.hrtime(),\n    });\n  }\n\n  updateRecord(path, result, payload) {\n    if (!RESULTS.includes(result)) {\n      throw new TypeError(`Result should be one of ${RESULTS.join()}. Got ${result}.`);\n    }\n\n    const recordset = Database.open(this._recordsets, path);\n    if (!recordset) {\n      throw new TypeError(`Missing or null records list for ${path}`);\n    }\n\n    recordset.result = result;\n    recordset.payload = payload;\n  }\n\n  closeRecord(path) {\n    setImmediate(() => {\n      // Checking if it's last record in all database\n      this._processed += 1;\n      const isLastRecord = this._processed === this._created;\n\n      // Checking if it's last record in current suite\n      const parent = Database.parent(this._recordsets, path);\n      parent.meta.processed += 1;\n      const currentSuiteLength = Object.values(parent).filter((item) => !item.meta).length;\n      const isLastRecordInSuite = parent.meta.processed === currentSuiteLength;\n\n      if (isLastRecord) {\n        parent.meta.duration = Database.toMilliseconds(process.hrtime(parent.meta.duration));\n        this.emit(EVENT.DATABASE.PROCESS.ENDED, this._recordsets);\n      } else if (isLastRecordInSuite) {\n        parent.meta.duration = Database.toMilliseconds(process.hrtime(parent.meta.duration));\n        this.emit(EVENT.DATABASE.RECORDSET.CLOSED, parent.meta.path);\n      } else {\n        const record = Database.open(this._recordsets, path);\n        record.duration = Database.toMilliseconds(process.hrtime(record.duration));\n      }\n    });\n  }\n}\n\nmodule.exports = new Database();\n","const EventEmitter = require('events');\nconst { EVENT } = require('./_const');\n\nclass ProcessManager extends EventEmitter {\n  constructor() {\n    super();\n\n    this._exitCode = 0;\n\n    this.on(EVENT.PROCESS.EXIT, () => {\n      setImmediate(() => {\n        process.exit(this._exitCode);\n      });\n    });\n\n    this.on(EVENT.PROCESS.EXIT_CODE.FAILURE, () => {\n      this._exitCode = 1;\n    });\n  }\n}\n\nmodule.exports = new ProcessManager();\n","const { EVENT, RESULT } = require('./_const');\nconst ConsoleReporter = require('./reporter');\nconst Database = require('./database');\nconst ProcessManager = require('./process-manager');\nconst { Spec } = require('./spec');\nconst { Suite } = require('./suite');\n\nclass EventBus {\n  init() {\n    // subscribe reporters\n    this._reporters = [ConsoleReporter];\n    // #==\n    // Suite Events\n    Suite.on(EVENT.SUITE.STARTED, (path, silent) => {\n      Database.emit(EVENT.DATABASE.RECORDSET.CREATE, path, silent);\n    });\n    Suite.on(EVENT.SUITE.HOOKS.REGISTER, (path, eachSetup, eachTeardown) => {\n      Spec.emit(EVENT.SPEC.SETUP.REGISTER, path, eachSetup);\n      Spec.emit(EVENT.SPEC.TEARDOWN.REGISTER, path, eachTeardown);\n    });\n    Suite.on(EVENT.SUITE.HOOKS.UNREGISTER, () => {\n      Spec.emit(EVENT.SPEC.SETUP.UNREGISTER);\n      Spec.emit(EVENT.SPEC.TEARDOWN.UNREGISTER);\n    });\n    // #==\n    // Spec Events\n    Spec.on(EVENT.SPEC.STARTED, (path) => {\n      Database.emit(EVENT.DATABASE.RECORD.CREATE, path);\n    });\n    Spec.on(EVENT.SPEC.SUCCESS, (path) => {\n      Database.emit(EVENT.DATABASE.RECORD.UPDATE, path, RESULT.SUCCESS);\n    });\n    Spec.on(EVENT.SPEC.IGNORE, (path) => {\n      Database.emit(EVENT.DATABASE.RECORD.UPDATE, path, RESULT.IGNORED);\n    });\n    Spec.on(EVENT.SPEC.FAILURE, (path, payload) => {\n      Database.emit(EVENT.DATABASE.RECORD.UPDATE, path, RESULT.FAILURE, payload);\n      ProcessManager.emit(EVENT.PROCESS.EXIT_CODE.FAILURE);\n    });\n    Spec.on(EVENT.SPEC.ENDED, (path) => {\n      Database.emit(EVENT.DATABASE.RECORD.CLOSE, path);\n    });\n    // #==\n    // Database Events\n    Database.on(EVENT.DATABASE.PROCESS.ENDED, (database) => {\n      this._reporters.forEach((reporter) => {\n        reporter.emit(EVENT.REPORTER.REPORT.START, database);\n      });\n    });\n    Database.on(EVENT.DATABASE.RECORDSET.CLOSED, (path) => {\n      Suite.emit(EVENT.SUITE.ENDED, path);\n    });\n    // #==\n    // Reporter Events\n    this._reporters.forEach((reporter) => {\n      reporter.on(EVENT.REPORTER.REPORT.ENDED, () => {\n        ProcessManager.emit(EVENT.PROCESS.EXIT);\n      });\n    });\n  }\n}\n\nmodule.exports = new EventBus();\n","const { spec, xspec } = require('./spec');\nconst { suite } = require('./suite');\n\nconst EventBus = require('./event-bus');\n\n// Launch event bus\nEventBus.init();\n\n// Just to not pollute the global\nconst ctx = {};\n\nconst api = {\n  // Suite\n  suite: suite.bind(ctx),\n  describe: suite.bind(ctx),\n\n  // Spec\n  spec: spec.bind(ctx),\n  it: spec.bind(ctx),\n  test: spec.bind(ctx),\n\n  // xSpec\n  xspec: xspec.bind(ctx),\n  xit: xspec.bind(ctx),\n  xtest: xspec.bind(ctx),\n};\n\nObject.assign(global, api);\nmodule.exports = api;\n","const { resolve } = require('path');\nconst { existsSync } = require('fs');\n\nconst CLIPrinter = require('./cli-printer');\nconst ArgvParser = require('./argv-parser');\nconst DirectoryWalker = require('./directory-walker');\n\n(function main() {\n  const argvParser = new ArgvParser(process.argv);\n  const CLIOptions = argvParser.getCLIOptions();\n\n  if (CLIOptions[ArgvParser.CLI_OPTION.HELP]) {\n    CLIPrinter.printHelp();\n    process.exit(0);\n  } else if (CLIOptions[ArgvParser.CLI_OPTION.VERSION]) {\n    CLIPrinter.printVersion();\n    process.exit(0);\n  }\n\n  const rootDirectoryPath = resolve(CLIOptions[ArgvParser.CLI_OPTION.DIRECTORY]);\n\n  if (!rootDirectoryPath) {\n    throw new Error('Missing path to test file! Use `titef --help` for further information');\n  } else if (!existsSync(rootDirectoryPath)) {\n    throw new Error(`The directory at ${rootDirectoryPath} does not exist! Use \\`titef --help\\` for further information`);\n  }\n\n  // eslint-disable-next-line global-require\n  require('./setup');\n  // eslint-disable-next-line global-require\n  require('../index.js');\n\n  const directoryWalkerOptions = {\n    extensions: CLIOptions[ArgvParser.CLI_OPTION.EXTENSIONS],\n  };\n  const directoryWalker = new DirectoryWalker(rootDirectoryPath, directoryWalkerOptions);\n  const testFiles = directoryWalker.getFiles();\n\n  testFiles.forEach((testFile) => {\n    /**\n       * This is used to prevent webpack to parse the require call\n       */\n    // eslint-disable-next-line no-eval\n    eval('require')(testFile);\n  });\n}());\n"]}