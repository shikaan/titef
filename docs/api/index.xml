<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>API Docs on titef</title>
    <link>https://shikaan.github.io/titef/api/</link>
    <description>Recent content in API Docs on titef</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    
	<atom:link href="https://shikaan.github.io/titef/api/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Specifications</title>
      <link>https://shikaan.github.io/titef/api/spec/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shikaan.github.io/titef/api/spec/</guid>
      <description>Specifications are basically functions: as long as no AssertionError is thrown, the specification is assumed to be passed.
Given that, every spec should always contain one assertion in order to be useful. Also, every spec is expected to live in a suite or in a describe.
Writing specifications Specifications can be written using the methods: it, spec. They accept the following parameters:
   Parameter Type Description     title String Title of the spec.</description>
    </item>
    
    <item>
      <title>Suites</title>
      <link>https://shikaan.github.io/titef/api/suite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shikaan.github.io/titef/api/suite/</guid>
      <description>Suites are containers for test specifications (see specs).
Along with their grouping function, suites have the fundamental role of allowing the developer to prepare the testing environment. This happens through two phases: the setup phase which happens before the actual test suite is run and the teardown phase which is supposed to happen after.
In Titef you can control those phases via the configuration object you will pass to the suite method.</description>
    </item>
    
  </channel>
</rss>